<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yc.fs.mapper.IUserInfoMapper">
	<!-- 以接口中的方法名为id值 -->
	<insert id="add" parameterType="File">
		insert into mUserInfo values(0,#{uname},#{pwd},1,#{photo},0)
	</insert>
	
	<select id="login" parameterType="UserInfo" resultType="UserInfo">
		select muid,uname,pwd,pow,photo,score from mUserInfo where uname=#{uname} and pwd=#{pwd}
	</select>
	
	<update id="update" parameterType="UserInfo">
		update mUserInfo set uname=#{uname},pwd=#{pwd},photo=#{photo} where muid=#{muid}
	</update>
	
	<delete id="delete" parameterType="Collection">
		delete from mUserInfo where muid in
		<foreach collection="array" item="muid" open="(" separator="," close=")">
			#{muid}
		</foreach>
	</delete>
	
	<select id="findAll" resultType="UserInfo">
		select muid,uname,pwd,pow,photo,score from mUserInfo order by muid
	</select>
	
	<select id="findByPage" resultType="UserInfo" parameterType="Map">
		select muid,uname,pwd,pow,photo,score from mUserInfo limit #{start},#{pageSize}
	</select>
	
	<select id="find" parameterType="JsonObject" resultMap="UserInfoByJson">
		select count(muid) as total,#{pageNo} as pageNo,#{pageSize} as pageSize,
			(#{pageNo}-1)*#{pageSize} as start from mUserInfo
	</select>
	
	<resultMap type="JsonObject" id="UserInfoByJson" autoMapping="true">
		<result column="pageNo" property="pageNo"/>
		<result column="pageSize" property="pageSize"/>
		<collection property="rows" column="{start=start,pageSize=pageSize}"
			 ofType="UserInfo" select="findByPage"></collection>
	</resultMap>
	
	<select id="total" resultType="Integer" >
		select count(muid) as total from mUserInfo
	</select>
	
</mapper>	